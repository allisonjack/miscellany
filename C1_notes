salloc -p short -N1 -t 01:00:00
#partition ivygpu also works
#check squeue to see which node is allocated
#then log on to allocated node:
ssh -X nodeXXX

#-----configuration: contents of .bashrc-----#
# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific aliases and functions
module load gcc
module load slurm 
umask 0007
export MATLABPATH="~/matlab/package/spm12"

module load fsl/gcc/5.0.7
PATH=${FSLDIR}/bin:${PATH}
export FSLDIR PATH
. ${FSLDIR}/etc/fslconf/fsl.sh
#--------end contents of .bashrc-------#



#interactive matlab
module load matlab
source ~/.bashrc
matlab

#-----submitting a non-interactive job to matlab: suit_reslice_slurm.m----#

clear all

%% Load SPM
spm fmri

%% Load IDs
fid = fopen('/lustre/groups/andi/GA_collab/SUIT/ASD_IDs.txt');
ID = cell(0,1);

while ~feof(fid)
  ID{size(ID,1)+1,1} = fgetl(fid);
end

%% Create array with paths to subject directories
SUBJDIR = cell(length(ID),1);
for i = 1:length(ID)
    SUBJDIR{i} = fullfile('/lustre/groups/andi/GA_collab/SUIT/', ID{i}, '/FILTERED_FX/RUN1');
end

%pooln=str2num(getenv('SLURM_NTASKS_PER_NODE'));
%parpool(pooln)

parpool(8);
parfor i = 1:length(ID)
    cd (SUBJDIR{i})
    SLICE = str2num(getenv('SLURM_ARRAY_TASK_ID'))
    FILTFX = sprintf('filtered_func_highres_%04d.nii', SLICE);
    suit_reslice(FILTFX, 'mc_anat_brain_suit_snc.mat', 'mask', 'cerebellar_mask.nii');
end
#----------end suit_reslice_slurm.m--------#


#-------sbatch file calling suit_reslice_slurm.m: suit_reslice.sbatch-------#


#!/bin/bash

# set output and error output filenames, %j will be replaced by Slurm with the jobid
#SBATCH -J suit_reslice_run1
#SBATCH -o suit_reslice_run1%j.out
#SBATCH -e suit_reslice_run1%j.err 
#SBATCH -n 32 
#SBATCH -p short 
#SBATCH -t 0:03:00
#SBATCH --mail-type=BEGIN,END,FAIL 
#SBATCH --mail-user=allisonjack@gwu.edu

source ~/.bashrc

module load matlab

ssh login4 -L 27000:128.164.84.113:27000 -L 27001:128.164.84.113:27001 -N &
export LM_LICENSE_FILE="27000@localhost"

matlab -nodesktop -nojvm < suit_reslice_slurm.m

#-----------end sbatch file-----#

#----------call at terminal-----#
sbatch array=0-279 suit_reslice.sbatch
#----------end call at terminal-----#



#------FSL stuff----#

cd /lustre/groups/andi/GA_collab/C1_INPUT
module load fsl/gcc/5.0.7

#convert skull-stripped images to .nii
cat ASD_IDs.txt | while read ID; do
  mkdir -p ../SUIT/$ID
  fslchfiletype NIFTI $ID/anat_brain.nii.gz ../SUIT/$ID/anat_brain_suit.nii
done

cd ../SUIT

matlab &
spm fmri


#----JOB ARRAY-----
#save below as, e.g., prestats.sbatch

#-------------SBATCH FILE: prestats.sbatch---------#
#!/bin/bash

#SBATCH -J prestats_run1
#SBATCH -N1
#SBATCH -p defq
#SBATCH -t 02:00:00
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=allisonjack@gwu.edu
#SBATCH -o prestats_run1_%A_%a.out
#SBATCH -e prestats_run1_%A_%a.err

source ~/.bashrc

#mapfile only works on bash v. 4
#read text file lines into array "ID", origin at 1 and trailing newline removed
mapfile -O 1 -t ID < /lustre/groups/andi/GA_collab/SUIT/ASD_IDs.txt

module load fsl/gcc/5.0.7

#gets elements from the ID array using ${ID[X]}
#values for SLURM_ARRAY_TASK_ID are going to be passed into this script from sbatch call (--array option) at terminal 
feat /lustre/groups/andi/GA_collab/FSFs/${ID[SLURM_ARRAY_TASK_ID]}/prestats_suit_run1.fsf

#------------END SBATCH FILE---------#

#-----CALL AT TERMINAL-------#

#array call needs to be length of array, i.e. length of text file (wc -l ASD_IDs.txt | awk '{print $1}')
sbatch --array=1-16 prestats.sbatch


#----------SBATCH FILE for lots of slices: fslsplit_slurm.sbatch-----#
#!/bin/bash

#SBATCH -J func2highres_run1
#SBATCH -n 32
#SBATCH -p short
#SBATCH -t 00:03:00
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=allisonjack@gwu.edu
#SBATCH -o func2highres_run1_%A_%a.out
#SBATCH -e func2highres_run1_%A_%a.err

source ~/.bashrc
module load fsl/gcc/5.0.7

STUDYDIR=/lustre/groups/andi/GA_collab
IDFILE=$STUDYDIR/SUIT/ASD_IDs.txt
RUN=1

cat $IDFILE | while read ID || [ -n "$ID" ]; do
  PRESTATS=$STUDYDIR/ANALYSIS/PRESTATS_SUIT/$ID
  FEATDIR=$PRESTATS/${ID}_run${RUN}.feat
  SUITDIR=$STUDYDIR/SUIT/$ID
  FILTDIR=$SUITDIR/FILTERED_FX/RUN${RUN}

  INPUT=$FEATDIR/filtered_func_data.nii.gz
  MAT=$FEATDIR/reg/example_func2highres.mat
  TEMP=$SUITDIR/filtered_func_highres_temp.nii.gz
  REF=$FEATDIR/reg/highres.nii.gz

  SPLIT=$(printf "%04g" ${SLURM_ARRAY_TASK_ID})
  
  FX=$FILTDIR/filtered_func_data_${SPLIT}.nii.gz
  FXTEMP=$FILTDIR/filtered_func_highres_${SPLIT}_temp.nii.gz
  
  flirt -in $FX -applyxfm -init $MAT -out $FXTEMP -paddingsize 0.0 -interp trilinear -ref $REF
  fslchfiletype NIFTI $FXTEMP $FILTDIR/filtered_func_highres_${SPLIT}.nii
  
  rm $FXTEMP
done
#-----END SBATCH FILE------#

#-----CALL AT TERMINAL-----#

sbatch --array=0-279 fslsplit_slurm.sbatch
